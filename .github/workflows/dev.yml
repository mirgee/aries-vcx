name: dev

on:
  push:
    branches:
      - "**"

env:
  RUST_TOOLCHAIN_VERSON: 1.64.0
  NODE_VERSION: 18

jobs:
  workflow-setup:
    runs-on: ubuntu-20.04
    outputs:
      PUBLISH_VERSION: ${{ steps.run-info.outputs.publish-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN_VERSON }}
      - uses: ./.github/actions/construct-run-info
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            build: |-
              set -e
              sudo apt-get update -y
              sudo apt-get install -y libssl-dev libzmq3-dev
              npm run build:napi -- --target x86_64-unknown-linux-gnu
              strip *.node
          - host: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/hyperledger/aries-vcx/napi-rs-alpine
            build: |-
              set -e
              cd wrappers/vcx-napi-rs
              npm run build:napi
              strip *.node
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              brew install openssl zmq
              npm run build:napi
              strip -x *.node
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              brew install openssl zmq
              sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
              export CC=$(xcrun -f clang);
              export CXX=$(xcrun -f clang++);
              SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
              export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";
              npm run build:napi
              strip -x *.node
    name: ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    needs:
      - workflow-setup
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build-napi
        with:
          docker: ${{ matrix.settings.docker }}
          target: ${{ matrix.settings.target }}
          build: ${{ matrix.settings.build }}
          publish-version: ${{ needs.workflow-setup.outputs.PUBLISH_VERSION }}
          node-version: ${{ env.NODE_VERSION }}
          rust-version: ${{ env.RUST_TOOLCHAIN_VERSON }}
  publish:
    runs-on: ubuntu-20.04
    needs:
      - workflow-setup
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/publish-napi
        with:
          publish-version: ${{ needs.workflow-setup.outputs.PUBLISH_VERSION }}
          npmjs-token: ${{ secrets.NPMJS_TOKEN }}
          node-version: ${{ env.NODE_VERSION }}
